// <auto-generated />
using System;
using MadaDaPesca.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MadaDaPesca.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250723212005_AgendaPescariaMigration")]
    partial class AgendaPescariaMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.AcessoGuiaDePesca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AcessoBloqueado")
                        .HasColumnType("boolean");

                    b.Property<bool>("EmailVerificado")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ExpiracaoTokenEsqueceuSenha")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("PrimeiroAcesso")
                        .HasColumnType("boolean");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<Guid?>("TokenEsqueceuSenha")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("AcessosGuiasDePesca");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.AgendaPescaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("Ano")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataDeCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<short>("Dia")
                        .HasColumnType("smallint");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<short?>("HoraFinal")
                        .HasColumnType("smallint");

                    b.Property<short?>("HoraInicio")
                        .HasColumnType("smallint");

                    b.Property<short>("Mes")
                        .HasColumnType("smallint");

                    b.Property<string>("Observacao")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<Guid>("PescariaId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Ano");

                    b.HasIndex("Dia");

                    b.HasIndex("Excluido");

                    b.HasIndex("Mes");

                    b.HasIndex("PescariaId");

                    b.HasIndex("Status");

                    b.HasIndex("Dia", "Mes", "Ano");

                    b.ToTable("AgendaPescarias");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.GuiaDePesca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AcessoGuiaDePescaId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataDeCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AcessoGuiaDePescaId")
                        .IsUnique();

                    b.HasIndex("Excluido");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("GuiasDePesca");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.Pescaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataDeCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<Guid>("GuiaDePescaId")
                        .HasColumnType("uuid");

                    b.Property<short?>("HoraFinal")
                        .HasColumnType("smallint");

                    b.Property<short?>("HoraInicial")
                        .HasColumnType("smallint");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<short?>("QuantidadePescador")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Excluido");

                    b.HasIndex("GuiaDePescaId");

                    b.ToTable("Pescarias");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<DateTime>("DataDeAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<DateTime>("DataDeCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<bool>("Excluido")
                        .HasColumnType("boolean");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.HasIndex("Cpf");

                    b.HasIndex("Email");

                    b.HasIndex("Excluido");

                    b.HasIndex("Nome");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.AgendaPescaria", b =>
                {
                    b.HasOne("MadaDaPesca.Domain.Entities.Pescaria", "Pescaria")
                        .WithMany("Agendamentos")
                        .HasForeignKey("PescariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pescaria");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.GuiaDePesca", b =>
                {
                    b.HasOne("MadaDaPesca.Domain.Entities.AcessoGuiaDePesca", "AcessoGuiaDePesca")
                        .WithOne()
                        .HasForeignKey("MadaDaPesca.Domain.Entities.GuiaDePesca", "AcessoGuiaDePescaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MadaDaPesca.Domain.Entities.Pessoa", "Pessoa")
                        .WithOne()
                        .HasForeignKey("MadaDaPesca.Domain.Entities.GuiaDePesca", "PessoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AcessoGuiaDePesca");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.Pescaria", b =>
                {
                    b.HasOne("MadaDaPesca.Domain.Entities.GuiaDePesca", "GuiaDePesca")
                        .WithMany("Pescarias")
                        .HasForeignKey("GuiaDePescaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GuiaDePesca");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.GuiaDePesca", b =>
                {
                    b.Navigation("Pescarias");
                });

            modelBuilder.Entity("MadaDaPesca.Domain.Entities.Pescaria", b =>
                {
                    b.Navigation("Agendamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
